version: '3.4'

networks:
  dev:
    driver: bridge      

services:
  customer-api:
    image: docker.io/library/ecommerce-customer-api
    depends_on:
        - "customer_db"
    container_name: customer-services
    ports:
        - "7123:80"
    build:
        context: .
        dockerfile: Dockerfile
    environment:
        - ConnectionStrings_DefaultConnection=User ID=postgres;Password=postgres;Server=customer_db;Port=5432;Database=CustomerDb; IntegratedSecurity=true;Pooling=True;
        - ASPNETCORE_URLS=http://+:80
    networks:
        - dev
  customer_db:
    image: postgres:latest
    container_name: customer_db
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=SampleDbCustomer
    ports:
        - "5432:5432"
    restart: always
    volumes:
        - app_data:/var/lib/postgresql/data;
    networks:
        - dev
volumes:
  app_data: